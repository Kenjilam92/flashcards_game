{"version":3,"sources":["Components/EditForm.jsx","Components/AddCard.jsx","Components/DisplayCards.jsx","Components/PopUp.jsx","Components/RandomGame.jsx","App.jsx","serviceWorker.js","index.js"],"names":["EditForm","props","useState","front","setFront","back","setBack","useEffect","console","log","selected","onSubmit","e","preventDefault","updateCard","axios","put","_id","then","res","refreshForm","data","refresh","catch","err","editCard","id","className","htmlFor","name","style","width","rows","value","onChange","target","AddCard","errors","setErrors","newCard","post","addCard","placeholder","properties","message","type","DisplayCards","list","flip","parentNode","classList","contains","remove","add","displayType","scope","map","card","i","key","data-toggle","data-target","onClick","edit","delete","deleteCard","columns","fontsize","reverse","PopUp","tabIndex","role","aria-labelledby","aria-hidden","title","data-dismiss","aria-label","children","form","form_id","RandomGame","setCard","streak","setStreak","score","setScore","turn","setTurn","result","setResult","report","setReport","unsuccessRate","Math","floor","drawCard","random","length","navigate","undefined","height","temp","played","unsuccess","hidden","Object","values","playedCard","App","display","setDisplay","setList","setFontSize","setColumns","selectedCard","setSelectedCard","setReverse","game","setGame","fetchCard","get","turnOnEditForm","checked","toggle","margin","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.4db9635d.chunk.js","sourcesContent":["import React,{useState,useEffect} from \"react\"\nimport axios from \"axios\"\nconst EditForm = props =>{\n  const [front,setFront]=useState(\"\")\n  const [back,setBack]=useState(\"\")\n  const fetchForm = () => {\n    console.log(\"fetch edit form\")\n    setFront(props.selected.front);\n    setBack(props.selected.back);\n  }\n  useEffect(()=>{\n    fetchForm();\n  },[props.selected]);\n  \n  const editCard = e =>{\n    e.preventDefault();\n    const updateCard = {\n      \"front\" :  front,\n      \"back\"  :  back\n    }\n    axios.put(`http://localhost:8000/api/cards/update/${props.selected._id}`,updateCard)\n      .then(res=>{\n          // console.log(res.data);\n          setFront(\"\");\n          setBack(\"\");\n          props.refreshForm(res.data._id);\n          props.refresh();\n        })\n      .catch (err=>console.log(err))\n  }\n  return(\n    <form onSubmit={e=>editCard(e)} id={props.id}>\n      <div className=\"row\">\n        <div className=\"col-6\">\n          <label htmlFor=\"front\">Front:</label>        \n          <textarea name=\"front\" \n                    style={{width: \"100%\"}}\n                    rows=\"5\"\n                    value={front}\n                    onChange={e=>setFront(e.target.value)}>\n          </textarea>\n        </div>\n        <div className=\"col-6\">\n        <label htmlFor=\"back\">Back:</label>  \n          <textarea name=\"back\" \n                    style={{width: \"100%\"}}\n                    rows=\"5\"\n                    value={back}\n                    onChange={e=>setBack(e.target.value)}>\n          </textarea>\n        </div>\n      </div>\n      <div className=\"row\">\n      </div>\n    </form>\n  );\n}\n\nexport default EditForm","import React,{useState} from \"react\"\nimport axios from \"axios\"\n\nconst AddCard = props =>{\n  const [front,setFront]=useState(\"\")\n  const [back,setBack]=useState(\"\")\n  const [errors,setErrors] = useState({})\n  const addCard = e =>{\n    e.preventDefault();\n    const newCard = {\n      \"front\" :  front,\n      \"back\"  :  back\n    }\n    console.log (newCard)\n    axios.post(\"http://localhost:8000/api/cards/new\",newCard)\n      .then(res=>{\n          res.data.errors?\n          setErrors(res.data.errors)\n          :\n          props.refresh();\n          setFront(\"\");\n          setBack(\"\");\n        })\n      .catch (err=>console.log(err.data))\n  }\n  return(\n    <form onSubmit={e=>addCard(e)}>\n      <label htmlFor=\"front\">Front:</label>        \n      <textarea name=\"front\" \n                style={{width: \"100%\"}}\n                rows=\"5\"\n                value={front}\n                placeholder={errors.front? errors.front.properties.message : null}\n                onChange={e=>setFront(e.target.value)}>\n      </textarea>\n      <label htmlFor=\"back\">Back:</label>  \n      <textarea name=\"back\" \n                style={{width: \"100%\"}}\n                rows=\"5\"\n                value={back}\n                placeholder={errors.back? errors.back.properties.message : null}\n                onChange={e=>setBack(e.target.value)}>\n      </textarea>\n      <button className=\"btn btn-info\"\n              type=\"submit\"> \n        Add Card\n      </button>\n    </form>\n  );\n}\n\nexport default AddCard","import React from \"react\"\nimport axios from \"axios\"\nconst DisplayCards = props =>{\n  const list = props.list\n  const deleteCard = e=>{\n    console.log(e)\n    axios.delete(`http://localhost:8000/api/cards/delete/${e}`)\n    .then(res=>{\n      console.log(res.data)\n      props.refresh()\n    })\n  }\n  const flip = e => {\n    console.log(e.target.parentNode)\n    if (e.target.parentNode.classList.contains(\"flipped\")){\n      e.target.parentNode.classList.remove(\"flipped\")\n    }else{\n      e.target.parentNode.classList.add(\"flipped\")\n    }\n  }\n  if (props.displayType===\"table\"){\n    return(\n      <table className=\"col table table-bordered table-hover\">\n        <thead className=\"thead-light\">\n          <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">Front</th>\n            <th scope=\"col\">Back</th>\n            <th scope=\"col\">Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {list.map( (card,i)=>\n            <tr key={i}>\n              <td>{i+1}</td>\n              <td>{card.front}</td>\n              <td>{card.back}</td>\n              <td>\n                <div className=\"btn-group\">\n                  <button className=\"btn-sm btn-success\"\n                          data-toggle=\"modal\" \n                          data-target=\"#editFormPopUp\"\n                          onClick={e=>props.edit(card._id)}\n                          >Edit\n                  </button>\n                  <button className=\"btn-sm btn-danger\"\n                          onClick={e=>deleteCard(card._id)}\n                          >Delete\n                  </button>\n                </div>\n                \n              </td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n    );\n  }\n  else {\n    return(\n      <div className={`d-grid grid-${props.columns}`}>\n        {list.map((card,i)=>\n          <div className=\"flip-card\" key={i} onClick={flip}>\n            <div className={`flip-card-inner font-${props.fontsize}`}>\n              <div className=\"flip-card-front\">\n                {props.reverse? card.back : card.front}\n              </div>\n              <div className=\"flip-card-back\">\n                {props.reverse? card.front : card.back}\n              </div>\n            </div>\n          </div>\n        )}\n    </div>    \n        \n    );\n  }\n}\n\nexport default DisplayCards","import React from 'react';\n\nconst PopUp = props =>{\n  return(\n    <div  className=\"modal fade\" \n          id={props.id} \n          tabIndex=\"-1\" \n          role=\"dialog\" \n          aria-labelledby=\"exampleModalLabel\" \n          aria-hidden=\"true\"\n          >\n      <div  className=\"modal-dialog\" \n            role=\"document\"\n            >\n        <div className =\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\" \n                id=\"exampleModalLabel\"\n                > {props.title}\n            </h5>\n            <button type=\"button\" \n                    className=\"close\" \n                    data-dismiss=\"modal\" \n                    aria-label=\"Close\"\n                    >\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          <div className=\"modal-body\">\n            {props.children}\n          </div>\n          <div className=\"modal-footer\">\n            <button type=\"button\" \n                    className=\"btn btn-secondary\" \n                    data-dismiss=\"modal\"\n                    >Close\n            </button>\n            <button type=\"submit\"\n                    form={props.form_id} \n                    className=\"btn btn-success\"\n                    >Save changes\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default PopUp","import React,{useState,useEffect} from \"react\";\nimport {navigate} from \"@reach/router\"\n\nconst RandomGame = props => {\n  const [card,setCard] = useState ({})\n  const [streak,setStreak] = useState(0)\n  const [score,setScore] = useState(0)\n  const [turn,setTurn] = useState(0)\n  const [result,setResult] = useState ({})\n  const [report,setReport] = useState (true)\n\n  var unsuccessRate = Math.floor((1-score/turn)*100)\n\n  const drawCard = () => {\n    if (props.list !== []){\n      const random = Math.floor(Math.random() * props.list.length);\n      setCard(props.list[random]);\n      setTurn(turn+1);\n    } \n    else{\n      navigate(\"/\");\n    }\n  }\n  const flip = e => {\n    console.log(e.target.parentNode)\n    if (e.target.parentNode.classList.contains(\"flipped\")){\n      e.target.parentNode.classList.remove(\"flipped\")\n    }else{\n      e.target.parentNode.classList.add(\"flipped\")\n    }\n  }\n  useEffect(()=>{\n    props.list ?\n    drawCard()\n    :\n    navigate(\"/\");\n    setTurn(0)\n    setStreak(0)\n    setScore(0)\n    setResult({})\n  },[props.list])\n  \n  const remembered = () =>{\n    let temp = {...card}\n    if (result[temp._id]){\n      temp.played= result[temp._id].played+1\n      temp.unsuccess = result[temp._id].unsuccess\n    }else{\n      temp.played = 1\n      temp.unsuccess = 0\n    }\n    result[temp._id]=temp\n    drawCard();\n    setScore(score+1);\n    setStreak(streak+1);\n  }\n  const forgot = () =>{\n    let temp = {...card}\n    if (result[temp._id]){\n      console.log(result[temp._id]);\n      temp.played= result[temp._id].played+1\n      temp.unsuccess= result[temp._id].unsuccess + 1\n    }else{\n      temp.played = 1\n      temp.unsuccess = 1\n    }\n    result[temp._id]=temp\n    console.log(result[temp._id]);\n    drawCard();\n    setStreak(0)\n  }\n  \n  const showReport = () =>{\n    report ?\n    setReport(false)\n    :\n    setReport(true)\n  }\n\n\n\n  return(\n    <div>\n      <h2>Random Game</h2>      \n      <div  className=\"row\" >\n        {card !== undefined ?\n        <div  className=\"flip-card col-md-6 \" \n              style={{height:300+\"px\"}} onClick={flip}>\n          <div className={`flip-card-inner font-${props.fontsize}`}>\n            <div className=\"flip-card-front\">\n              {props.reverse? card.back : card.front}\n            </div>\n            <div className=\"flip-card-back\">\n              {props.reverse? card.front : card.back}            \n            </div>\n          </div>\n        </div>\n         :\n         \"fail\"}\n        <div className=\"col-md-5\">\n          <p>Do you remember?</p>\n          <button className=\"btn btn-success col-6\"\n                  onClick={remembered}\n                  >Yes\n          </button>\n          <button className=\"btn btn-danger col-6\"\n                  onClick={forgot}\n                  >No\n          </button>\n          <table className=\"mt-2 mb-2 table-sm\">\n            <tbody>\n              <tr> \n                <th>You played:</th>\n                <td><b>{turn} {turn>1 ? \"cards\" : \"card\" }</b></td>\n              </tr>\n              <tr> \n                <th>Answer Streak:</th>\n                <td><b className=\"text-primary\">{streak}</b></td>\n              </tr>\n              <tr>\n                <th>Correct: </th>\n                <td><b className=\"text-success\">{score} </b></td>\n              </tr>\n              <tr>\n                <th>Unsuccessful rate: </th>\n                <td><b className=\"text-danger\">{turn ? unsuccessRate+\"%\" : 0}</b></td>\n              </tr>\n            </tbody>\n          </table>\n        \n        <button className=\"btn btn-secondary\"\n                onClick={showReport}\n                >{report? \"Show Report\" : \"Hide Report\"}\n        </button>\n        </div>\n      </div>\n      <div className=\"row\" hidden={report}>\n          <table className=\"table table-bordered\">\n            <thead className=\"thead-light\">\n              <tr>\n                <th>#</th>\n                <th>Front</th>\n                <th>Back</th>\n                <th>Played</th>\n                <th>Unsuccessful Rate</th>\n              </tr>\n            </thead>\n            <tbody>\n              {Object.values(result).map((playedCard,i)=>\n                <tr key={i}>\n                  <td>{i+1}</td>\n                  <td>{playedCard.front}</td>\n                  <td>{playedCard.back}</td>\n                  <td>{playedCard.played}</td>\n                  <td>{Math.floor (playedCard.unsuccess/playedCard.played *100) + \"%\"}</td>\n                </tr>\n              )}\n            </tbody>\n          </table>\n      </div>\n    </div>\n  )\n}\nexport default RandomGame","import React,{useState,useEffect} from 'react';\nimport  {Router, navigate} from \"@reach/router\"\nimport axios from \"axios\";\n// CSS //////////////////////////////\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport \"bootstrap/js/dist/modal.js\"\nimport './App.css';\n// Components //////////////////////\nimport EditForm from \"./Components/EditForm\"\nimport AddCard from \"./Components/AddCard\"\nimport DisplayCards from './Components/DisplayCards';\nimport PopUp from './Components/PopUp';\nimport RandomGame from './Components/RandomGame'\nfunction App() {\n  // Hooks /////////////////////////////////////\n  const [display,setDisplay]=useState(\"table\")\n  const [list,setList] = useState([])\n  const [fontsize,setFontSize] = useState(\"\")\n  const [columns,setColumns] = useState(3)\n  const [selectedCard,setSelectedCard]=useState({})\n  const [reverse,setReverse] = useState(false)\n  const [game,setGame] = useState(\"random\")\n  \n  // Functions ///////////////////////////////////\n  const fetchCard = () =>{\n    axios.get(\"http://localhost:8000/api/cards/\")\n      .then(res=>setList(res.data))\n      .catch(err=>console.log(err.data))\n  }\n  const toggle = e =>{\n    console.log('reverse:',reverse)\n    setReverse(e);\n  }\n  const turnOnEditForm = e => {\n    console.log(e)\n    axios.get(`http://localhost:8000/api/cards/${e}`)\n      .then(res=>{\n        // console.log(res.data)\n        setSelectedCard(res.data);\n        // console.log(selectedCard)\n      })\n      .catch(err=>console.log(err))\n  }\n\n  useEffect(()=>{\n    fetchCard();\n  },[])\n\n  // HTML return /////////////////////////////////////////\n  return (\n    <div className=\"container\">\n      <div className=\"jumbotron \">\n        <h1>Welcome to the flashcards game</h1>\n        <i> 20 cards per day, never fade away</i>\n        <PopUp id=\"editFormPopUp\" form_id=\"editFrom\" title=\"Editing a card\">\n          <EditForm id=\"editFrom\" \n                    selected={selectedCard}\n                    refresh={fetchCard}\n                    refreshForm={turnOnEditForm}\n                    />\n        </PopUp>\n      </div>\n      <div className=\"row\">\n          {/* Column 1 /////////////////////////////////////////////////////////////////*/}\n          <div className=\"col-lg-2 col-md- border border-secondary \">\n            <b className=\"row p-2 mb-2 bg-info text-white\">Setting</b>\n            <div className=\"d-flex justify-content-between align-items-baseline\">\n              <p>Font:</p>\n              <select name=\"font-size\"\n                      onChange={e=>setFontSize(e.target.value)}\n                      value={fontsize}\n                      >\n                <option value=\"\">Small</option>\n                <option value=\"med\">Medium</option>\n                <option value=\"large\">Large</option>\n              </select>\n            </div>\n            <div className=\"d-flex justify-content-between align-items-baseline\">\n              <p>Columns:</p>\n              <select name=\"columns\"\n                      onChange={e=>setColumns(e.target.value)}\n                      value={columns}>\n                <option value={2}>2</option>\n                <option value={3}>3</option>\n                <option value={4}>4</option>\n                <option value={5}>5</option>  \n              </select>\n            </div>\n            <div className=\"d-flex justify-content-between align-items-center\">\n              <p>Reverse:</p>\n              <label className=\"switch\">\n                <input  type=\"checkbox\" \n                        checked={reverse}\n                        onChange={e=>toggle(e.target.checked)}\n                        />\n                <span className=\"slider round\"></span>\n              </label>\n            </div>  \n            <div className=\"d-flex flex-column\">\n              <label htmlFor=\"games\">Select game:</label>\n              <select name=\"games\" \n                      id=\"games\"\n                      className=\"mb-3 form-control\" \n                      value={game} \n                      onChange={e=>setGame(e.target.value)}>\n                <option value=\"random\">Random</option>\n                <option value=\"random20\">Random20</option>\n                <option value=\"random50\">Random50</option>\n              </select>\n            </div>\n          </div>          \n          {/* Column 2 /////////////////////////////////////////////////////////////////*/}\n          <div className=\"col-lg-7 col-md- mb-3\">\n            <nav style={{margin: 10+\"px\"}}>\n              <button className=\"btn btn-info\"\n                      onClick={e=>setDisplay(\"table\")}\n                      >Table\n              </button>\n              <button className=\"btn btn-info\"\n                      onClick={e=>setDisplay(\"cards\")}\n                      >Cards\n              </button>\n              <button className=\"btn btn-success\"\n                      onClick={e=>navigate(`/game/${game}`)}\n                      >Play\n              </button>\n              <button className=\"btn btn-danger\"\n                      onClick={e=>navigate(\"/\")}\n                      >Quit                      \n              </button>\n            </nav>\n            <Router >\n              <DisplayCards path=\"/\" \n                            displayType={display} \n                            list={list}\n                            fontsize={fontsize}\n                            reverse={reverse}\n                            columns={columns}\n                            refresh={fetchCard}\n                            edit={turnOnEditForm}\n                            />\n              <RandomGame   path=\"/game/random\"\n                            list={list}\n                            fontsize={fontsize}\n                            reverse={reverse}\n                            />\n            </Router>\n          </div>\n          {/* Column 3 /////////////////////////////////////////////////////////////////*/}\n          <div className=\"col-lg-3 col-md- border border-secondary\">\n            <b className=\"row p-2 mb-2 bg-info text-white\">Add a card</b>\n            <AddCard refresh={fetchCard}/>\n            <b className=\"row p-2 mb-2 mt-2 bg-info text-white\">Comments</b>\n          </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}